// Additional - Large Screens beyond 1280px
// Note: Design for a width of 1280px with 16 columns

@media only screen and (min-width: 1280px) {

  @Resolution: 1280px; // Grid resolution
  @Margin: 20px; // Space between the columns
  @NumberOfColumns: 16; //Number of Columns

  //Returns the width of one column without margin
  @ColumnWidth: (@Resolution - (@NumberOfColumns * @Margin)) / @NumberOfColumns;

  //Returns the width of each column
  .FinalWidth(@ThisGrid: 0){  
  width: (@ColumnWidth + @ColumnWidth * @ThisGrid) + (@Margin * @ThisGrid);  
  }

  //Returns 1/3 and 2/3 of the container
  .OneThird(@Numerator: 1){
  @NewColumn: @Resolution - (3 * @Margin);  
  width: (@NewColumn / 3) * @Numerator;  
  }

  //Returns offset Value
  .Offset(@ThisGrid: 0){  
  padding-left: (@ColumnWidth * @ThisGrid) + (@Margin * @ThisGrid);  
  }

  //CSS start rendering large container for 16 columns
  .large.container                                  { position: relative; width: @Resolution; margin: 0 auto; padding: 0; }
  .large.container .column,
  .large.container .columns                         { float: left; display: inline; margin-left: (@Margin / 2); margin-right: (@Margin / 2); }
  .row                                                      { margin-bottom: 20px; }

  /* Nested Column Classes */
  .column.alpha, .columns.alpha                             { margin-left: 0; }
  .column.omega, .columns.omega                             { margin-right: 0; }

  /* Base Grid */
  .large.container .one.column,
  .large.container .one.columns                     { .FinalWidth(0)  }
  .large.container .two.columns                     { .FinalWidth(1)  }
  .large.container .three.columns                   { .FinalWidth(2)  }
  .large.container .four.columns                    { .FinalWidth(3)  }
  .large.container .five.columns                    { .FinalWidth(4)  } 
  .large.container .six.columns                     { .FinalWidth(5)  }
  .large.container .seven.columns                   { .FinalWidth(6)  }
  .large.container .eight.columns                   { .FinalWidth(7)  }
  .large.container .nine.columns                    { .FinalWidth(8)  }
  .large.container .ten.columns                     { .FinalWidth(9)  }
  .large.container .eleven.columns                  { .FinalWidth(10) }
  .large.container .twelve.columns                  { .FinalWidth(11) }
  .large.container .thirteen.columns                { .FinalWidth(12) }
  .large.container .fourteen.columns                { .FinalWidth(13) }
  .large.container .fifteen.columns                 { .FinalWidth(14) }
  .large.container .sixteen.columns                 { .FinalWidth(15) }

  .large.container .one-third.column                { .OneThird(1) }
  .large.container .two-thirds.column               { .OneThird(2) }

  /* Offsets */
  .large.container .offset-by-one                   { .Offset(1)  }
  .large.container .offset-by-two                   { .Offset(2)  }
  .large.container .offset-by-three                 { .Offset(3)  }
  .large.container .offset-by-four                  { .Offset(4)  }
  .large.container .offset-by-five                  { .Offset(5)  }
  .large.container .offset-by-six                   { .Offset(6)  }
  .large.container .offset-by-seven                 { .Offset(7)  }
  .large.container .offset-by-eight                 { .Offset(8)  }
  .large.container .offset-by-nine                  { .Offset(9)  }
  .large.container .offset-by-ten                   { .Offset(10) }
  .large.container .offset-by-eleven                { .Offset(11) }
  .large.container .offset-by-thirteen              { .Offset(13) }  
  .large.container .offset-by-fourteen              { .Offset(14) }  
  .large.container .offset-by-fifteen               { .Offset(15) }    
}
